#easy 



//{ Driver Code Starts
//Initial Template for Java
import java.io.*;
import java.util.*;

class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while(t-- > 0)
        {
            int N = Integer.parseInt(read.readLine());
            String input_line[] = read.readLine().trim().split("\\s+");
            int arr[]= new int[N];
            for(int i = 0; i < N; i++)
                arr[i] = Integer.parseInt(input_line[i]);
            
            Solution ob = new Solution();
            System.out.println(ob.findSingle(N, arr));
        }
    }
}

// } Driver Code Ends


//User function Template for Java

class Solution{
    static int findSingle(int n, int arr[]){
        // code here
      //  HashSet<Integer> s=new HashSet<>();
    /*  int total=0,sum=0;
      for(int i=0;i<n;i++)
      {
          total+=arr[i];
      }
        if(n%2==0)
        {
            int x=n/2;
            sum=(x*(x+1));
            
        }
        else
        {
            int x=n/2+1;
                    sum=(x*(x+1));
            
        }
        return sum-total;*/
    HashMap<Integer,Integer> ans=new HashMap<>();
    for(int num : arr)
    {
        ans.put(num,ans.getOrDefault(num,0)+1);
    }
    for(Map.Entry<Integer,Integer> entry:ans.entrySet())
    {
        if(entry.getValue()%2!=0)
        {
            return entry.getKey();
        }
    }
    return -1;
    }
}
